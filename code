--[[            

      Tower Blitz Autofarm
   
]]

if game.PlaceId == 4739557376 then
wait(3)
repeat wait(1)
until game:IsLoaded()
loadstring(game:HttpGet("https://raw.githubusercontent.com/ParaVox-no/TextLabel/main/notification", true))()
Notify("AutoFarm", "Loaded", 1.1)
Notify("AutoFarm", "Creating Server", 1.9)
local server = {
    [1] = "Solo",
    [2] = "Invite"
}
game:GetService("ReplicatedStorage").Events.StartServer:InvokeServer(unpack(server))
Notify("AutoFarm", "Setting up things", 1.5)
local skip = {[1] = "AutoSkip",[2] = true}
game:GetService("ReplicatedStorage").Events.UpdateSetting:FireServer(unpack(skip))

local Map = {[1] = "Isle"}
game:GetService("ReplicatedStorage").Events.UpdateMap:InvokeServer(unpack(Map))

Notify("AutoFarm", "Starting...", 1.3)
game:GetService("ReplicatedStorage").Events.StartGame:InvokeServer()
local GC = getconnections or get_signal_cons
if GC then
		for i,v in pairs(GC(game.Players.LocalPlayer.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
end
COREGUI = game:GetService("CoreGui")
local Dir = COREGUI:FindFirstChild("RobloxPromptGui"):FindFirstChild("promptOverlay")
Dir.DescendantAdded:Connect(function(Err)
		if Err.Name == "ErrorTitle" then
			Err:GetPropertyChangedSignal("Text"):Connect(function()
				if Err.Text:sub(0, 12) == "Disconnected" then
					if #game.Players:GetPlayers() <= 1 then
						game.Players.LocalPlayer:Kick("\nRejoining...")
						wait()
						game:GetService("TeleportService"):Teleport(4739557376, game.Players.LocalPlayer)
					end
				end
			end)
		end
end)
wait(15)
Notify("AutoFarm", "Unsuccesful, rejoining", 1.3)
game:GetService("TeleportService"):Teleport(4739557376, game.Players.LocalPlayer)
end

if game.PlaceId == 5527929546 then
repeat wait(1)
until game:IsLoaded()
HP = game:GetService("Workspace").Game.GameStats.BaseHealth
if game.Players.LocalPlayer.PlayerGui:WaitForChild("ScreenGui", 0.1) then
Wave = game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.GameInfoUI.Health.Wave
end
local wave = {
    "Wave 1",
    "Wave 2",
    "Wave 3",
    "Wave 4",
    "Wave 5",
    "Wave 6",
    "Wave 7",
    "Wave 8",
    "Wave 9",
    "Wave 10",
    "Wave 11",
    "Wave 12",
    "Wave 13",
    "Wave 14",
    "Wave 15",
    "Wave 16",
    "Wave 17",
    "Wave 18",
    "Wave 19",
    "Wave 20",
    "Wave 21",
    "Wave 22",
    "Wave 23",
    "Wave 24",
    "Wave 25",
    "Wave 26",
    "Wave 27",
    "Wave 28",
    "Wave 29",
    "Wave 30",
    "Wave 31",
    "Wave 32",
    "Wave 33",
    "Wave 34",
    "Wave 35",
    "Wave 36",
    "Wave 37",
    "Wave 38",
    "Wave 39",
    "Wave 40"
}
loadstring(game:HttpGet("https://raw.githubusercontent.com/DivineEntity01/TBRequests/main/NotificationUI", true))()
Notify("AutoFarm", "Loaded", 1.1)
function UpgradeTower(p)
    for _,v in pairs(workspace.Game.Towers:GetChildren()) do
    if p == 1 then
    local up = {[1] = v,[2] = 1}
    game:GetService("ReplicatedStorage").Events.UpgradeTower:InvokeServer(unpack(up))
    elseif p == 2 then
    local down = {[1] = v,[2] = 2}
    game:GetService("ReplicatedStorage").Events.UpgradeTower:InvokeServer(unpack(down))
    end
    end
end
function start()
local Diff = {[1] = "Hard"}
game:GetService("ReplicatedStorage").Events.VoteGamemode:FireServer(unpack(Diff))
game:GetService("ReplicatedStorage").Events.EndVote:FireServer()
end
function tp()
    Notify("AutoFarm", "Teleporting to lobby...", 1.2)
    game:GetService("TeleportService"):Teleport(4739557376, game.Players.LocalPlayer)
end
function HPCheck()
    if game:GetService("Workspace").Game.GameStats.BaseHealth.Value <= 0 then
    Notify("AutoFarm", "Teleporting to lobby...", 3)
    tp()
end
end
function WaveChanged()
    local t = Wave.Text
    if t == wave[1] then
        pcons(1)
        pcons(2)
    end
    if t == wave[3] then
        UpgradeTower(2)
    end
    if t == wave[5] then
        UpgradeTower(2)
        UpgradeTower(1)
    end
    if t == wave[6] then
        UpgradeTower(1)
    end
    if t == wave[7] then
        UpgradeTower(1)
        wait(4)
        UpgradeTower(1)
    end
    if t == wave[8] then
        UpgradeTower(1)
        pcons(1)
        pcons(2)
        UpgradeTower(2)
        UpgradeTower(1)
    end
    if t == wave[10] then
        UpgradeTower(2)
        UpgradeTower(1)
    end
    if t == wave[12] then
        UpgradeTower(1)
    end
    if t == wave[14] then
        UpgradeTower(1)
    end
    if t == wave[15] then
        UpgradeTower(1)
    end
    if t == wave[16] then
        UpgradeTower(1)
    end
    if t == wave[17] then
        UpgradeTower(1)
        pcons(2)
        pcons(1)
        UpgradeTower(1)
        UpgradeTower(1)
        wait(2)
        UpgradeTower(1)
end
    if t == wave[18] then
        UpgradeTower(1)
    end 
    if t == wave[19] then
        wait(3)
        UpgradeTower(1)
    end
    if t == wave[20] then
        wait(1)
        UpgradeTower(1)
        pcons(1)
    end
    if t == wave[20] then
        UpgradeTower(2)
        UpgradeTower(2)
        UpgradeTower(1)
        UpgradeTower(1)
        pcons(1)
    end
end
function pcons(n)
    if n == 1 then
    local n1 = {
    [1] = "Conscript",[2] = Vector3.new(-8.0842981338501, -1.2038626670837, 19.760631561279),[3] = 0}
    game:GetService("ReplicatedStorage").Events.PlaceTower:InvokeServer(unpack(n1))
    end
    if n == 2 then
    local n2 = {
    [1] = "Conscript",[2] = Vector3.new(8.5898103713989, -1.2025971412659, 2.8175673484802),[3] = 0}
    game:GetService("ReplicatedStorage").Events.PlaceTower:InvokeServer(unpack(n2))
    
    end
end
start()
Wave:GetPropertyChangedSignal("Text"):Connect(WaveChanged)
HP:GetPropertyChangedSignal("Value"):Connect(HPCheck)
Notify("Level", game.Players.LocalPlayer.Level.Value, 4)
Notify("Tokens", game.Players.LocalPlayer.Tokens.Value, 4)
COREGUI = game:GetService("CoreGui")
local Dir = COREGUI:FindFirstChild("RobloxPromptGui"):FindFirstChild("promptOverlay")
Dir.DescendantAdded:Connect(function(Err)
		if Err.Name == "ErrorTitle" then
			Err:GetPropertyChangedSignal("Text"):Connect(function()
				if Err.Text:sub(0, 12) == "Disconnected" then
					if #game.Players:GetPlayers() <= 1 then
						game.Players.LocalPlayer:Kick("\nRejoining...")
						wait()
						game:GetService("TeleportService"):Teleport(4739557376, game.Players.LocalPlayer)
					end
				end
			end)
		end
end)
local GC = getconnections or get_signal_cons
if GC then
		for i,v in pairs(GC(game.Players.LocalPlayer.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
end
--End of PlaceId
end
